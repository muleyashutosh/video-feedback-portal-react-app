{"version":3,"sources":["components/NavBar/NavBar.js","serverUrl.js","components/WebcamSurface/WebcamSurface.js","components/DataTable/DataTable.js","components/AdminData/AdminData.js","components/Video/Video.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","spread","justifyContent","title","white","color","textDecoration","NavBar","classes","AppBar","position","Toolbar","className","Typography","variant","to","Button","serverUrl","video","margin","width","buttonContainer","display","gap","gridTemplateColumns","padding","center","flexDirection","alignItems","WebcamSurface","webcamRef","useRef","mediaRecorderRef","useState","capturing","setCapturing","recordedChunks","setRecordedChunks","imgSrc","setImgSrc","submitButtonState","setSubmitButtonState","ip","setIp","handleDataAvailable","data","size","prev","concat","useEffect","a","fetch","response","json","IPv4","handleSubmit","NProgress","start","length","blob","Blob","type","FormData","append","Date","toLocaleString","method","body","done","audio","ref","mirrored","onClick","current","stop","MediaRecorder","stream","mimeType","addEventListener","getScreenshot","disabled","configure","showSpinner","table","container","marginTop","spacing","marginRight","marginLeft","emptyMsg","pointer","cursor","DataTable","rows","setRows","rowsData","map","index","filename","id","thumbnail","image","timestamp","handleDownload","resp","base64","document","createElement","url","URL","createObjectURL","href","style","download","appendChild","click","revokeObjectURL","removeChild","TableContainer","component","Paper","elevation","Table","aria-label","loading","TableHead","TableRow","TableCell","align","TableBody","scope","target","rel","src","alt","height","GetApp","verticalAlign","inputfield","marginBottom","button","errMsg","signoutButton","AdminPage","verified","setVerified","userName","setUserName","password","setPassword","invalidCreds","setInvalidCreds","event","preventDefault","headers","JSON","stringify","username","status","Card","CardContent","TextField","error","onChange","value","label","required","CardActions","videoParent","Video","useParams","setVideo","autoPlay","controls","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.ccad8c0d.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  spread: {\n    justifyContent: \"space-between\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  white: {\n    color: \"white\",\n    textDecoration: \"none\",\n  },\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  // console.log(classes);\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.root}>\n        <Typography variant=\"h6\" className={classes.title}>\n          <Link\n            className={classes.white}\n            to=\"/video-feedback-portal-react-app/\"\n          >\n            Feedback\n          </Link>\n        </Typography>\n        <Button color=\"inherit\" variant=\"outlined\">\n          <Link\n            className={classes.white}\n            to=\"/video-feedback-portal-react-app/admin\"\n          >\n            Admin\n          </Link>\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","const serverUrl = \"https://video-feedback-portal-server.cleverapps.io\";\n\nexport default serverUrl;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport serverUrl from \"../../serverUrl\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  video: {\n    margin: \"10px\",\n    width: \"50%\",\n  },\n  buttonContainer: {\n    display: \"grid\",\n    gap: \"10px\",\n    gridTemplateColumns: \"1fr 1fr\",\n    width: \"50%\",\n    padding: \"20px\",\n  },\n  center: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst WebcamSurface = () => {\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const [submitButtonState, setSubmitButtonState] = useState(true);\n  const [ip, setIp] = useState(\"\");\n  const classes = useStyles();\n\n  const handleDataAvailable = ({ data }) => {\n    if (data.size > 0) {\n      setRecordedChunks((prev) => prev.concat(data));\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"https://geolocation-db.com/json/\");\n      const data = await response.json();\n      setIp(data.IPv4);\n      // console.log(ip)\n    })();\n  }, [ip]);\n\n  const handleStartCaptureClick = () => {\n    setCapturing(true);\n    setSubmitButtonState(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: \"video/webm\",\n    });\n    mediaRecorderRef.current.addEventListener(\n      \"dataavailable\",\n      handleDataAvailable\n    );\n    mediaRecorderRef.current.start();\n    setImgSrc(webcamRef.current.getScreenshot());\n  };\n\n  const handleStopCaptureClick = () => {\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n    setSubmitButtonState(false);\n  };\n\n  const handleSubmit = async () => {\n    // console.log(recordedChunks);\n    NProgress.start();\n    // console.log(imgSrc)\n    if (recordedChunks.length && imgSrc) {\n      const blob = new Blob(recordedChunks, {\n        type: \"video/webm\",\n      });\n      const data = new FormData();\n      data.append(\"video\", blob);\n      data.append(\"ip\", ip);\n      data.append(\"timestamp\", new Date().toLocaleString());\n      data.append(\"thumbnail\", imgSrc);\n      await fetch(`${serverUrl}/api/storeVideo`, {\n        method: \"post\",\n        body: data,\n      });\n      setRecordedChunks([]);\n      setImgSrc(\"\");\n      setSubmitButtonState(true);\n    }\n    NProgress.done();\n  };\n\n  return (\n    <div className={classes.center}>\n      <Webcam\n        className={classes.video}\n        audio={true}\n        ref={webcamRef}\n        mirrored={true}\n      />\n      <div className={classes.buttonContainer}>\n        {capturing ? (\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={handleStopCaptureClick}\n          >\n            Stop\n          </Button>\n        ) : (\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleStartCaptureClick}\n          >\n            Capture\n          </Button>\n        )}\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={submitButtonState}\n          onClick={handleSubmit}\n        >\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default WebcamSurface;\n","import { useEffect, useState, Fragment } from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Link } from \"react-router-dom\";\nimport serverUrl from \"../../serverUrl\";\nimport { GetApp } from \"@material-ui/icons/\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nNProgress.configure({\n  showSpinner: false,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: \"100%\",\n  },\n  container: {\n    width: \"95%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(3),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n  },\n  emptyMsg: {\n    margin: theme.spacing(2),\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n}));\n\nconst DataTable = () => {\n  const [rows, setRows] = useState([]);\n  const classes = useStyles();\n\n  useEffect(\n    () =>\n      (async () => {\n        const response = await fetch(`${serverUrl}/api/getEntries`);\n        const { data } = await response.json();\n        setRows(data);\n      })(),\n    [setRows]\n  );\n\n  const rowsData = rows.map(({ filename, image, timestamp, ip }, index) => {\n    return {\n      id: index + 1,\n      thumbnail: image,\n      timestamp: timestamp,\n      ip: ip,\n      filename: filename,\n    };\n  });\n\n  const handleDownload = async (filename) => {\n    NProgress.start();\n    const resp = await fetch(`${serverUrl}/video/${filename}`);\n    const { video } = await resp.json();\n    const base64 = await fetch(`data:video/webp;base64,${video}`);\n    const blob = await base64.blob();\n    const a = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    a.href = url;\n    a.style.display = \"none\";\n    a.download = \"video.webm\";\n    document.body.appendChild(a);\n    a.click();\n    URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n    NProgress.done();\n  };\n\n  return (\n    <Fragment>\n      <TableContainer\n        className={classes.container}\n        component={Paper}\n        elevation={3}\n      >\n        <Table\n          className={classes.table}\n          aria-label=\"simple table\"\n          loading=\"true\"\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell align=\"center\">Video</TableCell>\n              <TableCell align=\"center\">TimeStamp</TableCell>\n              <TableCell align=\"center\">IP Address</TableCell>\n              <TableCell align=\"center\">Download</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rowsData.length === 0 ? (\n              <TableRow className={classes.emptyMsg}>\n                <TableCell>{\"No Records to show yet\"}</TableCell>\n              </TableRow>\n            ) : (\n              rowsData.map(({ filename, thumbnail, timestamp, ip }, index) => (\n                <TableRow key={index + 1}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {index + 1}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Link\n                      to={`/video-feedback-portal-react-app/video/${filename}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <img\n                        src={thumbnail}\n                        alt=\"\"\n                        style={{ width: 100, height: 80 }}\n                      />\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">{timestamp}</TableCell>\n                  <TableCell align=\"center\">{ip}</TableCell>\n                  <TableCell align=\"center\">\n                    <GetApp\n                      className={classes.pointer}\n                      onClick={() => handleDownload(filename)}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default DataTable;\n","import { useState, Fragment } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport DataTable from \"../DataTable/DataTable\";\nimport serverUrl from \"../../serverUrl\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"fit-content\",\n    margin: \"20px auto\",\n  },\n  verticalAlign: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  inputfield: {\n    margin: theme.spacing(3),\n    marginBottom: theme.spacing(0.5),\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  errMsg: {\n    color: \"#ea4335\",\n    margin: theme.spacing(2),\n  },\n  signoutButton: {\n    margin: theme.spacing(2),\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst AdminPage = () => {\n  const classes = useStyles();\n  const [verified, setVerified] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidCreds, setInvalidCreds] = useState(false);\n\n  const handleSubmit = async (event) => {\n    NProgress.start();\n    event.preventDefault();\n    const resp = await fetch(`${serverUrl}/api/signin`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"post\",\n      body: JSON.stringify({\n        username: userName,\n        password: password,\n      }),\n    });\n    const data = await resp.json();\n    if (data.status === \"OK\") {\n      setVerified(true);\n    } else {\n      setInvalidCreds(true);\n    }\n    NProgress.done();\n  };\n\n  const handleUsernameChange = ({ target }) => {\n    setUserName(target.value);\n  };\n  const handlePasswordChange = ({ target }) => {\n    setPassword(target.value);\n  };\n\n  const handleSignout = () => {\n    NProgress.start();\n    setVerified(false);\n    setInvalidCreds(false);\n    NProgress.done();\n  };\n\n  return (\n    <Fragment>\n      {verified ? (\n        <Fragment>\n          <div className={classes.buttonContainer}>\n            <Button\n              onClick={handleSignout}\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.signoutButton}\n            >\n              Signout\n            </Button>\n          </div>\n          <DataTable />\n        </Fragment>\n      ) : (\n        <Card className={classes.root} elevation={2}>\n          <CardContent className={classes.verticalAlign}>\n            <TextField\n              variant=\"filled\"\n              error={invalidCreds}\n              onChange={handleUsernameChange}\n              className={classes.inputfield}\n              id=\"username\"\n              label=\"Username\"\n              required\n            />\n            <TextField\n              variant=\"filled\"\n              type=\"password\"\n              error={invalidCreds}\n              onChange={handlePasswordChange}\n              className={classes.inputfield}\n              id=\"password\"\n              label=\"Password\"\n              required\n            />\n            {invalidCreds ? (\n              <Typography variant=\"body1\" className={classes.errMsg}>\n                {\"Invalid Credentials\"}\n              </Typography>\n            ) : null}\n          </CardContent>\n          <CardActions>\n            <Button\n              onClick={handleSubmit}\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n              size=\"medium\"\n            >\n              Submit\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </Fragment>\n  );\n};\n\nexport default AdminPage;\n","import { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useEffect, useState } from \"react\";\nimport serverUrl from \"../../serverUrl\";\n\nconst useStyles = makeStyles((theme) => ({\n  videoParent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n}));\n\nconst Video = () => {\n  const classes = useStyles();\n  const { filename } = useParams();\n  const [video, setVideo] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      const resp = await fetch(`${serverUrl}/video/${filename}`);\n      const { video } = await resp.json();\n      setVideo(`data:video/webm;base64,${video}`);\n    })();\n  });\n\n  // console.log(filename);\n  return (\n    <div className={classes.videoParent}>\n      <video autoPlay controls src={video} loading=\"true\"></video>\n    </div>\n  );\n};\n\nexport default Video;\n","import \"./App.css\";\nimport { Fragment } from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport WebcamSurface from \"./components/WebcamSurface/WebcamSurface\";\nimport AdminPage from \"./components/AdminData/AdminData.js\";\nimport Video from \"./components/Video/Video\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Fragment>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/video-feedback-portal-react-app/\">\n            <WebcamSurface />\n          </Route>\n          <Route path=\"/video-feedback-portal-react-app/admin\">\n            <AdminPage />\n          </Route>\n          <Route path=\"/video-feedback-portal-react-app/video/:filename\">\n            <Video />\n          </Route>\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from \"@material-ui/core\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#1769aa\" },\n    secondary: { main: \"#ab003c\" },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}